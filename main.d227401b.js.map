{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","listItems","children","makeNumber","salaryStr","split","join","sortList","listProperty","sortedList","sort","person1","person2","dataset","salary","append","getEmployees","map","item","name","innerText"],"mappings":";AAAA,aAyBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvBA,IAAMA,EAAOC,SAASC,cAAc,MAC9BC,EAAgBH,EAAAA,EAAKI,UAE3B,SAASC,EAAWC,GACX,OAACA,EAAUC,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,IAGxD,SAASC,EAASC,GACVC,IAAAA,EAAaD,EAAaE,KAAK,SAACC,EAASC,GAC7CT,OAAAA,EAAWS,EAAQC,QAAQC,QAAUX,EAAWQ,EAAQE,QAAQC,UAGlEhB,EAAKiB,OAALjB,MAAAA,EAAeW,EAAAA,IAGjB,SAASO,EAAaR,GACbA,OAAAA,EAAaS,IAAI,SAAAC,GAAI,OAAA,EAAA,CAC1BC,KAAMD,EAAKE,WACRF,EAAKL,WAIZN,EAASN,GACTe,EAAaf","file":"main.d227401b.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst listItems = [...list.children];\n\nfunction makeNumber(salaryStr) {\n  return +salaryStr.split('$').join('').split(',').join('');\n}\n\nfunction sortList(listProperty) {\n  const sortedList = listProperty.sort((person1, person2) =>\n    makeNumber(person2.dataset.salary) - makeNumber(person1.dataset.salary)\n  );\n\n  list.append(...sortedList);\n}\n\nfunction getEmployees(listProperty) {\n  return listProperty.map(item => ({\n    name: item.innerText,\n    ...item.dataset,\n  }));\n}\n\nsortList(listItems);\ngetEmployees(listItems);\n"]}